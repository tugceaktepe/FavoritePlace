plugins {
    alias libs.plugins.android.plugin
    alias libs.plugins.kotlin.android
    alias libs.plugins.kotlin.kapt
    alias libs.plugins.kotlin.parcelize
    alias libs.plugins.kotlin.serialization
    alias libs.plugins.hilt.plugin
    alias libs.plugins.safe.args
    alias libs.plugins.firebase.crashlitycs
    alias libs.plugins.maps.platform.secrets
    alias libs.plugins.gms.google.services
    alias libs.plugins.detekt
}

android {
    compileSdk 33

    defaultConfig {
        applicationId "com.aktepetugce.favoriteplace"
        minSdk 21
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
    }
}

detekt {
    buildUponDefaultConfig = true // preconfigure defaults
    allRules = false // activate all available (even unstable) rules.
    config = files("$projectDir/config/detekt.yml") // point to your custom config defining rules to run, overwriting default behavior
    baseline = file("$projectDir/config/baseline.xml") // a way of suppressing issues before introducing detekt
}

dependencies {
    implementation(libs.androidx.core.ktx)
    implementation(libs.androidx.appcompat)
    implementation(libs.constraint.layout)
    implementation(libs.material)

    implementation(libs.bundles.navigation)
    implementation(libs.bundles.androidx.lifecycle)

    implementation(libs.kotlinx.serialization.json)
    implementation(libs.kotlinx.coroutines.playservices)
    implementation(libs.play.services.maps)

    implementation(libs.dagger.hilt.android)
    kapt(libs.dagger.hilt.compiler)

    implementation(libs.glide.android)
    kapt(libs.glide.compiler)

    implementation platform(libs.firebase.bom)
    implementation(libs.firebase.analytics.ktx)
    implementation(libs.firebase.crashlytics.ktx)
    implementation(libs.firebase.database.ktx)
    implementation(libs.firebase.auth.ktx)
    implementation(libs.firebase.storage)

    implementation(libs.splash.screen)

    debugImplementation(libs.leak.canary)

    detektPlugins(libs.detekt.formatting)

    testImplementation(libs.testing.junit)
    androidTestImplementation(libs.testing.androidx.junit)
    androidTestImplementation(libs.testing.espresso.core)
}